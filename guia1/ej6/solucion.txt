Compile y analice el tamaño del binario final. Piense, ¿Cuánto espacio ocupa una matriz de 1024x1024 de ints? ¿Dónde está toda esa información en el binario? ¿Qué tamaño esperaba?
La linea int matriz[DIMENSION][DIMENSION] simplemente declara una variable y guarda que es una matriz con dimension DIMENSION.
Una matriz de 1024x1024 ints ocuparia 4*1024*1024 bytes (un int ocupa 4 bytes). Sin embargo, en el binario no se puede ver el tamanio de la matriz
ya que nunca se hizo un malloc o se lleno alguno de sus espacios. Simplemente se declara una variable de tipo int[DIMENSION][DIMENSION];

¿Qué ocurriría si dicha matriz estuviera inicializada con 0’s? ¿Y con otro valor? Pruebe cómo varía el tamaño de dicho binario con las distintas alternativas.
Supongo que efectivamente ocuparia 4*1024*1024 bytes. Intuyo que si usamos ints, ocuparia siempre lo mismo ya que los int ocupan 4 bytes.
Sorpresivamente, si llenamos la matriz con 0, tiene el mismo tamanio.
Si la llenamos con 4, por ejemplo, de repente pesa 4.1 Megas.

dios dice:
En C, la diferencia en el tamaño del archivo ejecutable (.out) se debe a la forma en que se inicializan los arrays en la memoria.

Cuando inicializas un array grande como int matriz[1024][1024] = {0};, estás diciendo que todos los elementos de la matriz deben ser cero. En este caso, el compilador puede optimizar el uso de la memoria al no almacenar explícitamente todos los ceros en el archivo ejecutable. En cambio, puede utilizar una técnica llamada "inicialización de memoria en tiempo de ejecución" donde el espacio necesario para el array se reserva en la sección de datos no inicializados (bss) del ejecutable, y se inicializa a cero en el momento de la ejecución del programa. Esto mantiene el tamaño del archivo ejecutable relativamente pequeño.

Por otro lado, cuando inicializas el array con un valor diferente de cero, como en int matriz[1024][1024] = {4};, el compilador debe almacenar explícitamente el valor de inicialización para cada elemento del array en el archivo ejecutable. Dado que el array es grande, esto resulta en un aumento significativo del tamaño del archivo ejecutable.

